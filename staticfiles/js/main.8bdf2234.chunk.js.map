{"version":3,"sources":["components/Rating.js","components/Product.js","constants/productConstants.js","components/Loader.js","components/Message.js","components/Paginate.js","components/Carousel.js","actions/productActions.js","screens/HomeScreen.js","screens/ProducScreen.js","constants/cartConstants.js","actions/cartActions.js","screens/CartScreen.js","constants/userConstants.js","components/SearchBox.js","components/Header.js","actions/userActions.js","components/Footer.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","constants/OrderConstants.js","screens/ProfileScreen.js","actions/OrderActions.js","screens/ShippingScreen.js","components/CheckoutSteps.js","screens/PaymentScreen.js","screens/PlaceorderScreen.js","screens/OrderScreen.js","screens/UsersListScreen.js","App.js","store.js","reducers/productsReducer.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/OrderReducer.js","index.js"],"names":["Rating","value","text","color","Fragment","style","className","Products","products","Col","md","xs","Card","to","id","Img","src","image","Body","Title","name","Text","description","price","rating","ButtonGroup","countInstock","Button","disabled","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_SUCCESS","PRODUCT_REVIEW_CREATE_REQUEST","PRODUCT_REVIEW_CREATE_FAIL","PRODUCT_REVIEW_CREATE_SUCCESS","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_FAIL","PRODUCT_TOP_SUCCESS","styled","LinearProgress","theme","height","borderRadius","linearProgressClasses","colorPrimary","backgroundColor","palette","grey","mode","bar","PreLoader","Box","sx","position","CircularProgress","variant","size","thickness","disableShrink","animationDuration","left","circularProgressClasses","circle","strokeLinecap","Message","Alert","severity","Paginate","page","pages","keyword","split","console","log","Pagination","Array","keys","map","x","active","TopCarousel","productGetTop","useSelector","state","loading","dispatch","error","useDispatch","useEffect","a","type","axios","get","data","payload","response","message","Carousel","pause","product","Item","Image","alt","fluid","Caption","HomeScreen","history","location","search","productList","listProducts","Row","Product","ProductScreen","match","productDetails","productReviews","successReview","success","errorReview","reviews","useState","comment","setComment","setRating","productId","params","userInfo","userLogin","Qty","setQty","marginTop","paddingBottom","container","spacing","marginLeft","marginRight","ListGroup","numReviews","varaiant","onChange","e","target","option","onClick","push","length","review","Form","onSubmit","preventDefault","getState","config","headers","Authorization","token","post","detail","reviewProductAction","FormGroup","Label","Control","as","required","row","CART_ADD_ITEM","CART_REMOVE_ITEM","ADD_SHIPPING_INFO","ADD_PAYMENT_METHOD_INFO","CART_ITEMS_CLEAR","addToCart","qty","localStorage","setItem","JSON","stringify","cart","cartItems","CartScreen","Number","handleCartDelete","removeFromCart","item","rounded","reduce","acc","toFixed","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_UPDATE_REQUEST","USER_DETAILS_UPDATE_SUCCESS","USER_DETAILS_UPDATE_FAIL","USER_DETAILS_UPDATE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","SearchBox","useHistory","setKeyword","pathname","inline","Header","Navbar","bg","Container","Brand","href","Nav","Link","removeItem","Footer","FormContainer","children","LoginScreen","email","setEmail","password","setPassword","redirect","login","Group","controlId","placeholder","RegisterScreen","confirmPassword","setConfirmPassword","setName","setMessage","registerUser","userRegister","register","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","USER_ORDER_REQUEST","USER_ORDER_SUCCESS","USER_ORDER_FAIL","ProfileScreen","userDetails","user","userDetailsUpdate","userOrders","userLoading","orders","userError","put","updateUserDetails","Table","striped","responsive","order","createdAt","substring","totalPrice","paidAt","ShippingScreen","shippingInfo","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","CheckoutSteps","step1","step2","step3","step4","PaymentScreen","payment","paymentMethod","setPaymentMethod","Check","label","checked","PlaceorderScreen","orderCreate","itemsPrice","shippingPrice","ItemPrice","taxPrice","index","CreateOrderAction","orderItems","shippingAddress","OrderScreen","orderId","orderPay","successPay","paymentResult","loadingPay","orderDetails","sdkReady","setSdkReady","isPaid","window","paypal","script","document","createElement","async","onload","body","appendChild","addPaypalScript","isDelivered","deliveredAt","amount","onSuccess","UsersListScreen","usersList","users","isAdmin","hover","confirm","App","exact","path","component","PlaceOrderScreen","middleware","thunk","reducers","combineReducers","action","existItem","find","filter","initialState","getItem","parse","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8bdf2234.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nfunction Rating({value, text, color}){\r\n    return(\r\n        <React.Fragment>\r\n                <span><i style = {{color}} className={\r\n                    value >= 1 \r\n                    ? \"fas fa-star\"\r\n                    : value >= 0.5 \r\n                    ? \"fas fa-star-half-alt\"\r\n                    : \"far fa-star\"\r\n                }>\r\n                </i>\r\n                </span>\r\n                <span><i style = {{color}} className={\r\n                    value >= 2 \r\n                    ? \"fas fa-star\"\r\n                    : value >= 1.5 \r\n                    ? \"fas fa-star-half-alt\"\r\n                    : \"far fa-star\"\r\n                }>\r\n                </i>\r\n                </span>\r\n                <span><i style = {{color}} className={\r\n                    value >= 3 \r\n                    ? \"fas fa-star\"\r\n                    : value >= 2.5 \r\n                    ? \"fas fa-star-half-alt\"\r\n                    : \"far fa-star\"\r\n                }>\r\n                </i>\r\n                </span>\r\n                <span><i style = {{color}} className={\r\n                    value >= 4 \r\n                    ? \"fas fa-star\"\r\n                    : value >= 3.5 \r\n                    ? \"fas fa-star-half-alt\"\r\n                    : \"far fa-star\"\r\n                }>\r\n                </i>\r\n                </span>\r\n                <span><i style = {{color}} className={\r\n                    value >= 5 \r\n                    ? \"fas fa-star\"\r\n                    : value >= 4.5 \r\n                    ? \"fas fa-star-half-alt\"\r\n                    : \"far fa-star\"\r\n                }>\r\n                </i>\r\n                </span>\r\n                <span>{text}</span>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default Rating;","import React from 'react';\r\nimport Rating from \"./Rating\"\r\nimport { Link } from 'react-router-dom';\r\nimport {Col, Row, Card, Button, Image, ButtonGroup} from 'react-bootstrap';\r\n\r\nfunction Products({products}){\r\n    return (\r\n        <Col md = {4} xs = {6}>\r\n            <Card>\r\n                <Link to = {`/details/${products.id}`}>\r\n                <Card.Img \r\n                src = {products.image} />\r\n                </Link>\r\n                <Card.Body>\r\n                    <Card.Title>{products.name}</Card.Title>\r\n                    <Card.Text>{products.description}</Card.Text>\r\n                    <Card.Title>NGN{products.price}</Card.Title>\r\n                    <Rating value = {products.rating} color = \"#FFD700\"/>\r\n                    <ButtonGroup>\r\n                   <Link to = {products.countInstock ? `/cart/${products.id}` : \"\"}><Button disabled = {products.countInstock == 0}>Add</Button></Link>\r\n                        <Button>View</Button>\r\n                    </ButtonGroup>\r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\nexport default Products;","export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\"\r\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\"\r\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\"\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\"\r\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\"\r\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\"\r\n\r\nexport const PRODUCT_REVIEW_CREATE_REQUEST = \"PRODUCT_REVIEW_CREATE_REQUEST\"\r\nexport const PRODUCT_REVIEW_CREATE_FAIL = \"PRODUCT_REVIEW_CREATE_FAIL\"\r\nexport const PRODUCT_REVIEW_CREATE_SUCCESS = \"PRODUCT_REVIEW_CREATE_SUCCESS\"\r\nexport const PRODUCT_CREATE_REVIEW_RESET = \"PRODUCT_CREATE_REVIEW_RESET\"\r\n\r\n\r\nexport const PRODUCT_TOP_REQUEST = \"PRODUCT_TOP_REQUEST\"\r\nexport const PRODUCT_TOP_FAIL = \"PRODUCT_TOP_FAIL\"\r\nexport const PRODUCT_TOP_SUCCESS = \"PRODUCT_TOP_SUCCESS\"\r\n\r\n\r\n\r\n\r\n\r\n","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport CircularProgress, {\r\n  circularProgressClasses,\r\n} from '@mui/material/CircularProgress';\r\nimport LinearProgress, { linearProgressClasses } from '@mui/material/LinearProgress';\r\n\r\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\r\n  height: 10,\r\n  borderRadius: 5,\r\n  [`&.${linearProgressClasses.colorPrimary}`]: {\r\n    backgroundColor: theme.palette.grey[theme.palette.mode === 'light' ? 200 : 800],\r\n  },\r\n  [`& .${linearProgressClasses.bar}`]: {\r\n    borderRadius: 5,\r\n    backgroundColor: theme.palette.mode === 'light' ? '#1a90ff' : '#308fe8',\r\n  },\r\n}));\r\n\r\n\r\nfunction PreLoader(){\r\n    return (\r\n        <React.Fragment>\r\n            <Box sx={{ position: 'relative' }}>\r\n      <CircularProgress\r\n        variant=\"determinate\"\r\n        sx={{\r\n          color: (theme) =>\r\n            theme.palette.grey[theme.palette.mode === 'light' ? 200 : 800],\r\n        }}\r\n        size={40}\r\n        thickness={4}\r\n        //{...props}\r\n        value={100}\r\n      />\r\n      <CircularProgress\r\n        variant=\"indeterminate\"\r\n        disableShrink\r\n        sx={{\r\n          color: (theme) => (theme.palette.mode === 'light' ? '#1a90ff' : '#308fe8'),\r\n          animationDuration: '550ms',\r\n          position: 'absolute',\r\n          left: 0,\r\n          [`& .${circularProgressClasses.circle}`]: {\r\n            strokeLinecap: 'round',\r\n          },\r\n        }}\r\n        size={40}\r\n        thickness={4}\r\n        //{...props}\r\n      />\r\n    </Box>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default PreLoader;","import React from 'react';\r\nimport Alert from '@mui/material/Alert';\r\n\r\nfunction Message({text}){\r\n    return (\r\n        <React.Fragment>\r\n            <Alert severity=\"error\">{text}</Alert>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default Message;","import React from 'react';\r\nimport { Button, Pagination } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Paginate({page, pages, keyword}){\r\n    \r\n    if(keyword){\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    console.log(\"keyword:\", keyword)\r\n\r\n    return(\r\n        pages > 1 && (\r\n            <Pagination>\r\n                {\r\n                    [...Array(pages).keys()].map((x)=>(\r\n                        <Link key={x+1}\r\n                        to = {`/?keyword=${keyword}&page=${x+1}`}\r\n                        active = {x + 1 === page}\r\n                        >\r\n                        <Button>{x+1}</Button>\r\n                        </Link>\r\n                    ))\r\n                }\r\n            </Pagination>\r\n        )\r\n    )\r\n}\r\nexport default Paginate;","import React, { useEffect } from 'react';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getTopProductsAction } from '../actions/productActions';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction TopCarousel(){\r\n\r\n    const productGetTop = useSelector(state=>state.productGetTop)\r\n    const {loading, products, error} = productGetTop\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(()=>{\r\n        dispatch(getTopProductsAction())\r\n    }, dispatch)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Carousel pause='hover' className='bg-dark'>\r\n                {\r\n                    products.map((product) => \r\n                    <Carousel.Item>\r\n                        <Link to={`/details/${product.id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid></Image>\r\n                        <Carousel.Caption className='carousel.caption'>\r\n                            <h4>{product.name} (NGN{product.price})</h4>\r\n                        </Carousel.Caption>\r\n                        </Link>\r\n                        \r\n                    </Carousel.Item>\r\n                    )\r\n                }\r\n            </Carousel>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default TopCarousel;","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_REVIEW_CREATE_REQUEST,\r\n    PRODUCT_REVIEW_CREATE_SUCCESS,\r\n    PRODUCT_REVIEW_CREATE_FAIL,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL\r\n\r\n} from '../constants/productConstants';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport const listProducts = (keyword='') => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: PRODUCT_LIST_REQUEST\r\n        });\r\n        const {data} = await axios.get(`/api/products${keyword}`)\r\n    dispatch({\r\n        type: PRODUCT_LIST_SUCCESS,\r\n        payload : data\r\n    });\r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const productInfo = (id) => async (dispatch) => {\r\n   try{\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_REQUEST\r\n        });\r\n    const {data} = await axios.get(`/api/products/${id}`)\r\n    dispatch({\r\n        type: PRODUCT_DETAILS_SUCCESS, \r\n        payload: data\r\n    })\r\n   }catch(error){\r\n       dispatch({\r\n        type: PRODUCT_DETAILS_FAIL,\r\n        payload : error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n       });\r\n        \r\n    }\r\n}\r\n\r\nexport const reviewProductAction = (productId, review) => async (dispatch, getState) => {\r\n    try{\r\n\r\n        dispatch({\r\n            type : PRODUCT_REVIEW_CREATE_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin : {\r\n                userInfo\r\n            }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = axios.post(`/api/product/${productId}/reviews`,\r\n        review,\r\n        config)\r\n\r\n        dispatch({\r\n            type : PRODUCT_REVIEW_CREATE_SUCCESS,\r\n            payload : data\r\n        });\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type : PRODUCT_REVIEW_CREATE_FAIL,\r\n            payload : error.response && error.response.data.detail ?\r\n            error.response.data.detail : error.message  \r\n        })\r\n    }\r\n}\r\n\r\nexport const getTopProductsAction = () => async (dispatch) => {\r\n   try{\r\n\r\n    dispatch({\r\n        type : PRODUCT_TOP_REQUEST\r\n    });\r\n\r\n    const {data} = await axios.get('/api/products/top')\r\n\r\n    dispatch({\r\n        type : PRODUCT_TOP_SUCCESS,\r\n        payload : data\r\n    })\r\n\r\n   }catch(error){\r\n\r\n    dispatch({\r\n        type : PRODUCT_TOP_FAIL,\r\n        payload : error.response && error.response.data.message ?\r\n        error.response.data.message : error.message\r\n    });\r\n\r\n   }\r\n}","import React from 'react';\r\nimport Products from '../components/Product';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { listProducts } from '../actions/productActions';\r\nimport { useEffect } from 'react';\r\nimport PreLoader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { Row } from 'react-bootstrap';\r\nimport Paginate from '../components/Paginate';\r\nimport TopCarousel from '../components/Carousel';\r\n\r\n\r\n\r\nfunction HomeScreen({history}){\r\n    const dispatch = useDispatch() \r\n\r\n    let keyword = history.location.search\r\n\r\n    const productList = useSelector(state=>state.productList)\r\n    const {error, loading, products, page, pages} =  productList\r\n\r\n    useEffect(()=>{\r\n            dispatch(listProducts(keyword))\r\n        }, [dispatch, keyword]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TopCarousel />\r\n             <Row className='mt-5'>\r\n                 <h2>Featured Products</h2>\r\n        {\r\n            loading ? <PreLoader />\r\n            : error ? <Message text = {error} />\r\n            :\r\n           \r\n            products.map((product)=>\r\n    \r\n            <Products products = {product} key = {product.id}/>\r\n \r\n            )\r\n            \r\n        }\r\n        </Row>\r\n        <Row className='mt-3'>\r\n        <Paginate page = {page} pages = {pages} keyword = {keyword}/>\r\n        </Row>\r\n        \r\n          </React.Fragment>\r\n    )\r\n  \r\n}\r\nexport default HomeScreen;","import React from 'react';\r\nimport {useEffect, useState, history} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { productInfo, reviewProductAction } from '../actions/productActions';\r\nimport PreLoader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Rating from '../components/Rating';\r\nimport { Link } from 'react-router-dom';\r\nimport { Col, ListGroup, Row, Button, Card, Form } from 'react-bootstrap';\r\nimport { FormGroup } from '@mui/material';\r\nimport { ProductReviewReducer } from '../reducers/productsReducer';\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\r\n\r\n\r\n\r\n\r\nfunction ProductScreen({match, history}){ \r\n\r\n    const productDetails = useSelector(state=>state.productDetails)\r\n    const {loading, error, product} = productDetails\r\n\r\n    const productReviews =  useSelector(state=>state.productReviews)\r\n    const {loading:loadingReview, success:successReview, error:errorReview, reviews} = productReviews\r\n\r\n    const [comment, setComment] = useState('')\r\n    const [rating, setRating] = useState(0)\r\n\r\n    const productId = match.params.id\r\n\r\n    const userLogin = useSelector(state=>state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const dispatch = useDispatch();\r\n   \r\n    const [Qty, setQty] = useState(1)\r\n\r\n    const ReviewSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(reviewProductAction(productId,\r\n            {\r\n                rating,\r\n                comment\r\n            })\r\n        )\r\n    }\r\n\r\nuseEffect(()=>{\r\n    if (successReview) {\r\n        setRating(0)\r\n        setComment('')\r\n        dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n    }\r\n\r\n    dispatch(productInfo(match.params.id))\r\n }, [setComment, setRating, successReview, dispatch]);\r\n\r\nconst handleAddCart = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${Qty}`)\r\n}\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row marginTop = {5} paddingBottom = {5}><Link to=\"/\"><Button>Back</Button></Link></Row>\r\n            {\r\n                loading ? <PreLoader />\r\n                : error ? <Message text = {error}/>\r\n                : <Row container xs={12} spacing = {2} marginLeft = {10} marginRight = {2}>\r\n                <Col xs={6}>                  \r\n                \r\n                        <Card.Img\r\n                        alt = {product.name} \r\n                        src = {product.image}\r\n                        height = \"300px\"\r\n                        />               \r\n                    </Col>\r\n                    <Col xs = {6}>                       \r\n                            <ListGroup>\r\n                        <ListGroup.Item><h6 variant = \"h5\">{product.name}</h6></ListGroup.Item>\r\n                        <ListGroup.Item><h6 variant = \"h6\">NGN{product.price}</h6></ListGroup.Item>\r\n                        <ListGroup.Item><Rating value = {product.rating} text = {`${product.numReviews} Reviews`} color = \"#f8e825\"/></ListGroup.Item>\r\n                        <ListGroup.Item><h6 varaiant = \"body1\">{product.description}</h6></ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n                <Col xs = {5}>\r\n                    <ListGroup>\r\n                    <ListGroup.Item>\r\n                        <Row xs = {4} container>\r\n                        <Col xs = {6}><h6 variant = \"h6\">Price: </h6></Col>\r\n                        <Col xs = {6}><h6 variant = \"h6\">NGN{product.price}</h6></Col>\r\n                    </Row>\r\n                    </ListGroup.Item>\r\n \r\n                    <ListGroup.Item>\r\n                        <Row xs = {4} container>\r\n                        <Col xs={6}><h6 variant = \"h6\">Status:</h6></Col>\r\n                        <Col xs={6}><h6 variant = \"h6\">{product.countInstock > 0 ? \"In Stock\" : \"Out of Stock\"}</h6></Col>\r\n                    </Row>\r\n                    </ListGroup.Item> \r\n                    <ListGroup.Item>\r\n                        {\r\n                            product.countInstock > 0 && <form\r\n                            onChange = {(e)=>{setQty(e.target.value)}}>\r\n                                <label>Quantity:</label>\r\n                                <select>\r\n                                    {\r\n                                    [...Array(product.countInstock).keys()].map((option) =>(\r\n                                    <option key = {option + 1} value = {option + 1}>{option + 1}</option>\r\n                                    )\r\n                                    )\r\n}\r\n                                    </select>\r\n                            </form>\r\n                        }\r\n                            \r\n                        </ListGroup.Item>                     \r\n                    <ListGroup.Item>\r\n                         <Button disabled = {product.countInstock == 0} onClick={handleAddCart}>Add to Cart</Button>                     \r\n                       </ListGroup.Item>\r\n                </ListGroup> \r\n                    </Col>\r\n                </Row>\r\n            }\r\n\r\n            <Row>\r\n                <Col md={6}>\r\n                    <h2>REVIEWS</h2>\r\n                    {product.reviews.length === 0 && <Message variant='info' text= \"No Review\"/>}\r\n                    <ListGroup>\r\n                            {\r\n                                product.reviews.map((review) => \r\n                                <ListGroup.Item>\r\n                                        <strong>{review.name ? review.name : \"\"}</strong>\r\n                                        <p>{review.comment}</p>\r\n                                        <Rating value = {review.rating} color = \"#f8e825\" />\r\n                                </ListGroup.Item>\r\n                                \r\n                                )\r\n                            }\r\n                            <ListGroup.Item>\r\n                                <h2>WRITE A REVIEW</h2>\r\n                                {errorReview && <Message text={errorReview} />}\r\n                                {\r\n                                    userInfo ? (\r\n                                        <Form  onSubmit={ReviewSubmitHandler}>\r\n                                        <FormGroup>\r\n                                            <Form.Label>Rating:</Form.Label>\r\n                                            <Form.Control as = \"select\" value = {rating} onChange={(e)=>setRating(e.target.value)} required>\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor</option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                            </Form.Control>\r\n                                        </FormGroup>\r\n\r\n                                        <FormGroup>\r\n                                            <Form.Label>Comment:</Form.Label>\r\n                                            <Form.Control type=\"textarea\" row = '5' value={comment} onChange = {(e)=>setComment(e.target.value)} required></Form.Control>\r\n                                        </FormGroup>\r\n\r\n                                        <Button type='submit'>Add Review</Button>\r\n                                </Form>\r\n                                    ) : (\r\n                                        <Message text = \"Login to write a review\" />\r\n                                    )\r\n                                }\r\n                               \r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                </Col>\r\n            </Row>\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default ProductScreen;","export const CART_ADD_ITEM = \"CART_ADD_ITEM\"\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\"\r\nexport const ADD_SHIPPING_INFO = \"ADD_SHIPPING_INFO\"\r\nexport const ADD_PAYMENT_METHOD_INFO = \"ADD_PAYMENT_METHOD_INFO\"\r\nexport const CART_ITEMS_CLEAR = \"CART_ITEMS_CLEAR\"\r\n\r\n","\r\nimport {CART_ADD_ITEM, CART_REMOVE_ITEM, ADD_SHIPPING_INFO, ADD_PAYMENT_METHOD_INFO} from '../constants/cartConstants';\r\nimport axios from 'axios';\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data.id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInstock: data.countInstock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type : CART_REMOVE_ITEM,\r\n        payload : id\r\n    })\r\n\r\n    localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const addShippingAction = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: ADD_SHIPPING_INFO,\r\n        payload: data\r\n    });\r\n    \r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const addPaymentMethodAction = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type : ADD_PAYMENT_METHOD_INFO,\r\n        payload : data\r\n    });\r\n    localStorage.setItem(\"paymentMethod\", JSON.stringify(data))\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\nimport {Row, Col, Image, ListGroup, Form, Card, Button} from 'react-bootstrap';\r\nimport Message from \"../components/Message\";\r\n\r\n\r\n\r\nfunction CartScreen({match, history, location}){\r\n    const dispatch = useDispatch()\r\n    const productId = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(()=>{\r\n        if(productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const handleCartDelete = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const handleProceedCart = () => {\r\n        history.push(\"/shipping?redirect=login/\")\r\n    }\r\n    return(\r\n        <React.Fragment>\r\n            <h2>Shopping Cart</h2>\r\n          {\r\n              cartItems.length === 0 ? <Message text = \"Sorry. No cart items.\" /> :\r\n              (\r\n                  <ListGroup>\r\n                      {\r\n                          cartItems.map(item =>\r\n                            <ListGroup.Item variant = \"flush\">\r\n                                <Row>\r\n                                    <Col md={2}><Image src = {item.image} alt = {item.name} fluid rounded/></Col>\r\n                                    <Col md={3}><Link to = {`/details/${item.product}`}>{item.name}</Link></Col>\r\n                                    <Col md = {2}>${item.price}</Col>\r\n                                    <Col>\r\n                                        <Form value = {item.product} onChange = {(e)=>{dispatch(addToCart(item.product, Number(e.target.value)))}}>\r\n                                        <select>\r\n                                            {\r\n                                                [...Array(item.countInstock).keys()].map((option) => (\r\n                                                    <option key = {item.product}>{option + 1}</option>\r\n                                                ))\r\n                                            }\r\n                                            </select>\r\n                                        </Form>\r\n                                    </Col>\r\n                                    <Col md={1}><Button variant = \"light\" onClick = {()=>handleCartDelete(item.product)}><i className = \"fas fa-trash\"></i></Button>                                    \r\n                                    </Col> \r\n                                </Row>\r\n                    </ListGroup.Item> \r\n                        )\r\n                      }\r\n                      <ListGroup.Item variant = \"flush\">\r\n                        <Col md = {4}>\r\n                            <Card>\r\n                            <h1>Subtotal({cartItems.reduce((acc, item) => acc + item.qty, 0)})</h1>\r\n                          {cartItems.reduce((acc, item) => acc + item.qty*item.price, 0).toFixed(2)}\r\n                            </Card>    \r\n                        </Col>\r\n                        </ListGroup.Item>\r\n                      <ListGroup.Item>\r\n                      <Button disabled = {cartItems.length === 0} type = \"button\" \r\n                      variant = \"dark\" className = \"btn-block\" onClick = {handleProceedCart}>Proceed To Checkout</Button>\r\n                      </ListGroup.Item>\r\n                  </ListGroup>\r\n              )\r\n          }\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default CartScreen;","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\n\r\nexport const USER_DETAILS_UPDATE_REQUEST = 'USER_DETAILS_UPDATE_REQUEST';\r\nexport const USER_DETAILS_UPDATE_SUCCESS = 'USER_DETAILS_UPDATE_SUCCESS';\r\nexport const USER_DETAILS_UPDATE_FAIL = 'USER_DETAILS_UPDATE_FAIL';\r\nexport const USER_DETAILS_UPDATE_RESET = 'USER_DETAILS_UPDATE_RESET';\r\n\r\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\"\r\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\"\r\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\"\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction SearchBox(){\r\n\r\n    let history = useHistory()\r\n\r\n    const[keyword, setKeyword] = useState('')\r\n\r\n    function submitHandler(e){\r\n        e.preventDefault();\r\n        if(history){\r\n            history.push(`/?keyword=${keyword}`)\r\n        }else{\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n                <Form onSubmit={submitHandler} inline>\r\n                    <Form.Control\r\n                    type = 'text'\r\n                    value={keyword}\r\n                    onChange = {(e)=>setKeyword(e.target.value)}\r\n                    name = 'q'\r\n                    >\r\n                    </Form.Control>\r\n                    <Button\r\n                    type = \"submit\"\r\n                    className = \"success-sm\">Search</Button>\r\n                </Form>\r\n        </React.Fragment>\r\n    )\r\n}\r\nexport default SearchBox","import React from \"react\";\r\n import {Container, Nav, Navbar, NavDropdown} from 'react-bootstrap';\r\n import userLoginReducer from \"../reducers/userReducers\";\r\n import {useSelector, useDispatch} from 'react-redux';\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { logout } from \"../actions/userActions\";\r\nimport SearchBox from \"./SearchBox\";\r\n\r\n\r\n function Header(){\r\n   const loginReducer = useSelector(state=>state.userLogin)\r\n   const {userInfo} = loginReducer\r\n   const dispatch = useDispatch()\r\n   const handleLogout = (e) => {\r\n     e.preventDefault()\r\n     dispatch(logout())\r\n   }\r\n   return(\r\n     <header>\r\n  <Navbar bg=\"dark\" variant=\"dark\" color=\"blue\">\r\n    <Container>\r\n    <Navbar.Brand href=\"/\">9jaOk</Navbar.Brand>\r\n    <SearchBox />\r\n    <Nav className=\"me-auto\">\r\n      <Nav.Link href=\"/cart/\"><i className=\"fas fa-cart-plus mr-1\"></i>Cart</Nav.Link>\r\n    {\r\n      userInfo ? (  \r\n        <Nav>    \r\n          <Nav.Link>\r\n            {userInfo.name}\r\n          </Nav.Link>\r\n          <Nav.Link href=\"\" type = \"submit\" onClick = {handleLogout}>Logout</Nav.Link>\r\n          <Nav.Link href=\"/profile/\"><i className=\"fas fa-user\"></i>Profile</Nav.Link>\r\n          <Nav.Link href=\"/shipping/\"><i className=\"fas fa-use\"></i>Shipping</Nav.Link>\r\n          </Nav>\r\n        \r\n      ) : (\r\n        <Nav>\r\n          <Nav.Link href=\"/login/\"><i className=\"fas fa-user\"></i>Login</Nav.Link> \r\n          <Nav.Link href=\"/register/\"><i className=\"fas fa-user\"></i>Register</Nav.Link>\r\n          </Nav> \r\n      )\r\n    }\r\n    </Nav>\r\n    </Container>\r\n  </Navbar>\r\n     </header>\r\n   )\r\n }\r\n export default Header;","import { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, \r\n    USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS,\r\n    USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, \r\n    USER_DETAILS_FAIL,\r\n\r\n    USER_DETAILS_UPDATE_REQUEST,\r\n    USER_DETAILS_UPDATE_SUCCESS,\r\n    USER_DETAILS_UPDATE_FAIL,\r\n\r\n        USER_LIST_REQUEST,\r\n        USER_LIST_SUCCESS,\r\n        USER_LIST_FAIL\r\n} from \"../constants/userConstants\";\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/account/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem(\"userInfo\")\r\n    dispatch({\r\n        type : USER_LOGOUT\r\n    }\r\n    )\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n        const config = {\r\n             headers : {\r\n                    \"Content-type\" : \"application/json\"\r\n                }\r\n        }\r\n        const {data} = await axios.post('/api/account/register/',\r\n        {\"name\":name, \"email\":email, \"password\":password},\r\n        config)\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n        type: USER_REGISTER_FAIL,\r\n        payload: error.response && error.response.data.detail ? error.response.data.detail : \r\n        error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/account/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserDetails = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/account/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsersAction = () => async (dispatch, getState) => {\r\n    try{\r\n\r\n        dispatch({\r\n            type : USER_LIST_REQUEST\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\"/api/account/users/\",\r\n        config)\r\n\r\n        dispatch({\r\n            type : USER_LIST_SUCCESS,\r\n            payload : data\r\n        });\r\n\r\n    }catch(error){\r\n            \r\n        dispatch({\r\n            type : USER_LIST_FAIL,\r\n            payload : error.response && error.response.data.detail\r\n            ? error.response.data.detail : error.message\r\n        })\r\n    }\r\n}","import * as React from 'react';\r\n\r\nimport {Container, row, col} from 'react-bootstrap'\r\n\r\n\r\nfunction Footer(){\r\n  return (\r\n    <Container>\r\n      <footer className=\"footer text-center\">\r\n        <h4>9jaOk copyright &copy; 2021</h4>\r\n        </footer>\r\n    </Container>\r\n  )\r\n}\r\nexport default Footer;\r\n","import React from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\n\r\nfunction FormContainer({children}){\r\n    return (<React.Fragment>\r\n        <Container>\r\n        <Row className = \"justify-content-md-center\">\r\n            <Col xs = {12} md={6}>\r\n                {children}\r\n            </Col>\r\n        </Row>\r\n        </Container>\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default FormContainer;","import Button from \"@restart/ui/esm/Button\";\r\nimport React from \"react\";\r\nimport {Col, Row, Form} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport {useState, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { login } from \"../actions/userActions\";\r\n\r\n\r\nfunction LoginScreen({location, history}){\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {loading, userInfo, error} = userLogin\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n            e.preventDefault();\r\n            dispatch(login(email, password))\r\n    }\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    },[userInfo, redirect, history])\r\n    \r\n    return (\r\n        <FormContainer>\r\n            <h2>Sign In</h2>\r\n            <Form onSubmit = {submitHandler}>\r\n                <Form.Group controlId = \"email\">\r\n                    <Form.Label>Email:</Form.Label>\r\n                    <Form.Control type = \"email\"\r\n                    value = {email}\r\n                    onChange = {(e)=>setEmail(e.target.value)}\r\n                    placeholder = \"Enter email address\">\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId = \"password\">\r\n                    <Form.Label>Password:</Form.Label>\r\n                    <Form.Control type = \"password\" value = {password}\r\n                    onChange = {(e)=>setPassword(e.target.value)}\r\n                    placeholder = \"Enter Password\">\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Button type = \"submit\" variant = \"primary\">Sign In</Button>\r\n            </Form>\r\n            Don't have an account yet? <Link\r\n            to = {'redirect' ? `/redirect?=${redirect}` : '/redirect'}\r\n            >Register</Link>\r\n        </FormContainer>\r\n    )\r\n}\r\nexport default LoginScreen;","import React, { useEffect, useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport FormContainer from '../components/FormContainer';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { register } from '../actions/userActions';\r\n\r\n\r\n\r\nfunction RegisterScreen({location, history}){\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const registerUser = useSelector(state=>state.userRegister);\r\n    const {userInfo, loading, error} = registerUser;\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(password != confirmPassword){\r\n            setMessage(\"Passwords must match\")\r\n        }else{\r\n            dispatch(register(name, email, password))\r\n            history.push('/login')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    },[userInfo, redirect, history])\r\n    return(\r\n        <FormContainer>\r\n            <h2>Register</h2>\r\n            <h2>{message}</h2>\r\n            <Form onSubmit = {submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email:</Form.Label>\r\n                    <Form.Control\r\n                    type=\"email\"\r\n                    placeholder='Enter Email Address'\r\n                    value = {email}\r\n                    required\r\n                    onChange = {(e)=>setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name:</Form.Label>\r\n                    <Form.Control\r\n                    type=\"name\"\r\n                    placeholder='Enter Name'\r\n                    value = {name}\r\n                    required\r\n                    onChange = {(e)=>setName(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password:</Form.Label>\r\n                    <Form.Control\r\n                    type=\"password\"\r\n                    placeholder='Enter Account Password'\r\n                    value = {password}\r\n                    required\r\n                    onChange = {(e)=>setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Confirm Password:</Form.Label>\r\n                    <Form.Control\r\n                    type=\"password\"\r\n                    placeholder='Confirm Password'\r\n                    value = {confirmPassword}\r\n                    required\r\n                    onChange = {(e)=>setConfirmPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit'>Sign Up</Button>\r\n            </Form>\r\n            Already have an account? <Link to = {redirect ? `/login?redirect=${redirect}` : '/login'}>Sign In</Link>\r\n        </FormContainer>\r\n    )\r\n}\r\nexport default RegisterScreen;","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\"\r\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\"\r\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\"\r\n\r\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\"\r\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\"\r\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\"\r\n\r\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\"\r\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\"\r\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\"\r\n\r\nexport const USER_ORDER_REQUEST = \"USER_ORDER_REQUEST\"\r\nexport const USER_ORDER_SUCCESS = \"USER_ORDER_SUCCESS\"\r\nexport const USER_ORDER_FAIL = \"USER_ORDER_FAIL\"\r\n","import React, { useEffect, useState } from 'react';\r\nimport {Row, Col, Form, Button, Table} from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getUserDetails, updateUserDetails } from '../actions/userActions';\r\nimport { USER_DETAILS_UPDATE_RESET } from '../constants/userConstants';\r\nimport { userDetailsReducer, userLoginReducer } from '../reducers/userReducers';\r\nimport { userOrderReducer } from '../reducers/OrderReducer';\r\nimport { getUserOrders } from '../actions/OrderActions';\r\nimport Message from '../components/Message';\r\nimport PreLoader from '../components/Message'\r\nimport { Link } from 'react-router-dom';\r\n \r\n\r\nfunction ProfileScreen({history}){\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDetailsUpdate = useSelector(state => state.userDetailsUpdate)\r\n    const { success } = userDetailsUpdate\r\n\r\n    const userOrders = useSelector(state=>state.userOrders)\r\n    const {loading : userLoading, orders, error : userError} = userOrders\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo.id !== user.id) {\r\n                dispatch({ type: USER_DETAILS_UPDATE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(getUserOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserDetails({\r\n                'id': user.id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n    \r\n    return (\r\n        <Row>\r\n            <Col md={6}>\r\n            <h2>User Profile</h2>\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                </Button>\r\n\r\n                </Form>\r\n</Col>\r\n<Col>\r\n        <h2>My Orders</h2>\r\n        {\r\n        userLoading ?  (\r\n            <PreLoader />\r\n        ) : userError ? (<Message text = {userError} />) : (\r\n            <Table striped responsive className='table-sm'>\r\n            <thead>\r\n            <tr>\r\n                    <th>ID</th>\r\n                            <th>Date</th>\r\n                        <th>Total</th>\r\n                     <th>Paid</th>\r\n                      <th>Delivered</th>\r\n                     </tr>\r\n            </thead>\r\n            <tbody>\r\n               {\r\n                   orders && (\r\n                   orders.map((order) => \r\n                   <tr key={order.id}>\r\n                       <td>{order.id}</td>\r\n                       <td>{order.createdAt.substring(0,10)}</td>\r\n                       <td>NGN{order.totalPrice}</td>\r\n                       <td>{order.paidAt}</td>\r\n                       <td>\r\n                           <Link to = {`/order/${order.id}`}>\r\n                           <Button type = \"submit\" >details</Button>\r\n                           </Link>\r\n                       </td>\r\n                   </tr>)\r\n                   )\r\n               }\r\n            </tbody>\r\n    </Table>\r\n    )\r\n        }\r\n        \r\n</Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default ProfileScreen;","import {\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n\r\n    USER_ORDER_FAIL,\r\n    USER_ORDER_REQUEST,\r\n    USER_ORDER_SUCCESS,\r\n\r\n} from '../constants/OrderConstants';\r\nimport axios from 'axios';\r\n import {CART_ITEMS_CLEAR} from '../constants/cartConstants'\r\n\r\n\r\nexport const CreateOrderAction = (order) => async (dispatch, getState) => {\r\n\r\n    try{\r\n        dispatch({\r\n            type : ORDER_CREATE_REQUEST\r\n        });\r\n    \r\n        const {userLogin : {\r\n            userInfo\r\n    }\r\n    } = getState()\r\n    \r\n        const config = {\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                 Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n    \r\n    \r\n        const {data} = await axios.post(\"/api/product/order\",\r\n        order,\r\n        config)\r\n    \r\n        dispatch({\r\n            type : ORDER_CREATE_SUCCESS,\r\n            payload : data\r\n        });\r\n\r\n        dispatch({\r\n            type : CART_ITEMS_CLEAR\r\n        });\r\n        localStorage.removeItem(\"cartItems\")\r\n    \r\n    }catch(error){\r\n\r\n        dispatch({\r\n            type : ORDER_CREATE_FAIL,\r\n            payload : error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message\r\n        });\r\n    }\r\n    \r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/product/order/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const orderPayAction = (id, paymentResult) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type : ORDER_PAY_REQUEST\r\n        });\r\n\r\n        const {\r\n            userLogin : {\r\n                userInfo\r\n            }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = axios.put(`/api/product/order/${id}/pay`,\r\n        config)\r\n\r\n        dispatch({\r\n            type : ORDER_PAY_SUCCESS,\r\n            payload : data\r\n        })\r\n    }catch(error){\r\n        dispatch({\r\n            type : ORDER_PAY_FAIL,\r\n            payload : error.response && error.response.data.detail\r\n            ? error.response.data.detail : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const getUserOrders = () => async (dispatch, getState) => {\r\n    try{\r\n\r\n        dispatch({\r\n            type : USER_ORDER_REQUEST\r\n        });\r\n\r\n        const {\r\n            userLogin : {\r\n                userInfo\r\n            }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers : {\r\n                \"Content-type\" : \"application/json\",\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(\"/api/userorders/\",\r\n        config)\r\n\r\n        dispatch({\r\n            type : USER_ORDER_SUCCESS,\r\n            payload : data\r\n        });\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type : USER_ORDER_FAIL,\r\n            payload : error.response && error.response.data.detail ?\r\n            error.response.data.detail : error.message\r\n        });\r\n    }\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {addShippingAction} from \"../actions/cartActions\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\n\r\nfunction ShippingScreen({history}){\r\n\r\n    const cart = useSelector(state=>state.cart)\r\n    const {shippingInfo} = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingInfo.address)\r\n    const [city, setCity] = useState(shippingInfo.city)\r\n    const [postalCode, setPostalCode] = useState(shippingInfo.postalCode)\r\n    const [country, setCountry] = useState(shippingInfo.country)\r\n\r\n    const submitHandler = (e) => {\r\n            e.preventDefault();\r\n            console.log(\"submitted\")\r\n            dispatch(addShippingAction({address, city, postalCode, country}));\r\n            history.push('/payment/')\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h2>Shipping</h2>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"address\">\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Address\" value = {address ? address : ''} onChange={(e)=>{setAddress(e.target.value)}}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"city\">\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter City\" value = {city ? city : ''} onChange={(e)=>{setCity(e.target.value)}}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"postalCode\">\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Postal Code\" value = {postalCode ? postalCode : ''} onChange={(e)=>{setPostalCode(e.target.value)}}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"country\">\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter Country\" value = {country ? country : ''} onChange={(e)=>{setCountry(e.target.value)}}></Form.Control>\r\n                </Form.Group>\r\n                <Button type=\"submit\">Next</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\nexport default ShippingScreen;","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Login</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Shipping</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Payment</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                        <Nav.Link disabled>Place Order</Nav.Link>\r\n                    )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState } from 'react';\r\nimport { Button, Col, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { addPaymentMethodAction } from '../actions/cartActions';\r\n\r\n\r\n\r\nfunction PaymentScreen({history}){\r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state=>state.cart)\r\n    const {payment} = cart\r\n    \r\n    \r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(addPaymentMethodAction(paymentMethod)\r\n        );\r\n        history.push('/placeorder/')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps/>\r\n            <h2>Choose Payment Method</h2>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group>\r\n                <Col>\r\n                    <Form.Check\r\n                    type = \"radio\"\r\n                    label = \"Paypal or Credit Card\"\r\n                    checked\r\n                    onChange={(e) => {setPaymentMethod(e.target.value)}}\r\n                    id = 'paypal'\r\n                    >                        \r\n                    </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Button type = \"submit\" variant=\"primary\">Continue</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\nexport default PaymentScreen;","import React, { useEffect } from 'react';\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport Message from '../components/Message'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { CreateOrderAction } from '../actions/OrderActions';\r\nimport {CART_ITEMS_CLEAR} from '../constants/cartConstants'\r\n\r\nfunction PlaceorderScreen ({history}) {\r\n    const cart = useSelector(state=>state.cart)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {shippingInfo} = cart\r\n\r\n    const orderCreate = useSelector(state=>state.orderCreate)\r\n    const {order, error, success} = orderCreate\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.ItemPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = (Number(cart.itemsPrice) * 0.01).toFixed(2)\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    function placeOrder(e){\r\n        e.preventDefault(); \r\n\r\n        dispatch(CreateOrderAction({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingInfo,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: Number(cart.itemsPrice),\r\n            shippingPrice: Number(cart.shippingPrice),\r\n            taxPrice: Number(cart.taxPrice),\r\n            totalPrice: Number(cart.totalPrice),\r\n        }));\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(success){\r\n            history.push(`/order/${order.id}/`)\r\n            dispatch({\r\n                type : CART_ITEMS_CLEAR\r\n            })\r\n        }\r\n    }, [success, order]);\r\n\r\n    return (\r\n        <Row className='mt-5'>\r\n            <CheckoutSteps />\r\n            <h3>REVIEW ORDER</h3>\r\n                <Col md={8}>\r\n                    <ListGroup>\r\n                        <ListGroup.Item>\r\n                        <h6>SHIPPING ADDRESS</h6>\r\n                        <p>\r\n                            <strong>Shipping Address:</strong> {' '}\r\n                            {shippingInfo.address}, {shippingInfo.city},\r\n                            {' '}\r\n                            {shippingInfo.postalCode},\r\n                            {' '}\r\n                            {shippingInfo.country}\r\n                            {' '}\r\n                        </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                        <h6>PAYMENT METHOD</h6>\r\n                        <p>\r\n                        <strong>Method:</strong> {' '}\r\n                        {cart.paymentMethod}\r\n                        </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                        <h6>ORDER ITEMS</h6>\r\n                        </ListGroup.Item>\r\n                        {\r\n                            cart.cartItems.length === 0 ? <Message>\r\n                                There are no items in the cart\r\n                            </Message> : (\r\n                                <ListGroup>\r\n                                    {\r\n                                        cart.cartItems.map((item, index) => \r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md = {1}>\r\n                                                    <Image src={item.image} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to = {`/details/${item.product}/`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                        )\r\n                                    }\r\n                                </ListGroup>\r\n                            )\r\n                        }\r\n\r\n                    </ListGroup>                    \r\n                </Col>\r\n               \r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    PLACE ORDER\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n\r\n        </Row>\r\n    )\r\n}\r\nexport default PlaceorderScreen;","import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport Message from '../components/Message'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport {getOrderDetails, orderPayAction} from '../actions/OrderActions'\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport PreLoader from '../components/Loader'\r\n\r\n\r\n\r\n\r\nfunction OrderScreen ({match, history}) {\r\n\r\n    const orderId = match.params.id\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userInfo = useSelector(state=>state.userInfo)\r\n\r\n    const orderPay = useSelector(state=>state.orderPay)\r\n    const {paymentResult, success : successPay, loading : loadingPay} = orderPay\r\n\r\n    const orderDetails = useSelector(state=>state.orderDetails)\r\n    const {order, error, loading} = orderDetails\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n\r\n    if(!loading && !error){\r\n        order.itemsPrice = order .orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n\r\n    const addPaypalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = \"javascript/tex\"\r\n        script.src = <script src=\"https://www.paypal.com/sdk/js?client-id=AdXqlnZ3-_Kqj-7QxLox6nGOyU0Y6IDwbP8BllXcE4Cgw3LDDS6pJyPM5vidwU5HgsILZqehTRtCivRC\"></script>\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady = true\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    const handlePaymentSuccess = (paymentResult) => {\r\n        dispatch(orderPayAction(orderId, paymentResult))\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n        //if(!userInfo){\r\n          //  history.push('/login')\r\n        //}\r\n\r\n        if (!order || successPay || order.id !== Number(orderId)) {\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid){\r\n            if(!window.paypal){\r\n            addPaypalScript()\r\n        } else{\r\n            setSdkReady(true)\r\n        }\r\n    }\r\n        console.log('useEffect working!')\r\n\r\n    }, [dispatch, order, orderId, successPay])\r\n\r\n    return loading ? (<PreLoader />)\r\n    : error ? (<Message />) :\r\n    (\r\n        <Row className='mt-5'>  \r\n            <h3>REVIEW ORDER</h3>\r\n                <Col md={8}>\r\n                    <ListGroup>\r\n                       <ListGroup.Item>\r\n                        <h6>SHIPPING ADDRESS</h6>\r\n                        <p>\r\n                            <strong>Shipping Address:</strong> {' '}\r\n                            {order.shippingAddress.address}, {order.shippingAddress.city},\r\n                            {' '}\r\n                            {order.shippingAddress.postalCode},\r\n                            {' '}\r\n                            {order.shippingAddress.country}\r\n                            {' '}\r\n                        </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                        <h6>CUSTOMER DETAILS</h6>\r\n                        <p>\r\n                            <strong>Email:</strong> {' '}\r\n                            <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                            {' '}\r\n                            <strong>Name:</strong> {' '}\r\n                            {order.user.name}\r\n                        </p>\r\n                        {order.isDelivered ? (\r\n                                        <Message variant='success' text = \"Order delivered\">Delivered on {order.deliveredAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning' text = \"Not delivered\">Not Delivered</Message>\r\n                                        )}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                        <h6>PAYMENT METHOD</h6>\r\n                        <p>\r\n                        <strong>Method:</strong> {' '}\r\n                        {order.paymentMethod}\r\n                        </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                        <h6>ORDER ITEMS</h6>\r\n                        </ListGroup.Item>\r\n    \r\n                        {\r\n                            order.orderItems.length === 0 ? <Message text = \"No existing orders\">\r\n                                No existing orders\r\n                            </Message> : (\r\n                                <ListGroup>\r\n                                    {\r\n                                        order.orderItems.map((item, index) => \r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md = {1}>\r\n                                                    <Image src={item.image} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to = {`/details/${item.product}/`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                    </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                        )\r\n                                    }\r\n                                </ListGroup>\r\n                            )\r\n                        }\r\n                        <ListGroup.Item>\r\n                        {order.isPaid ? (\r\n                                        <Message variant='success' text = \"Paid\">Delivered on {order.deliveredAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning' text = \"Not paid\">Not Delivered</Message>\r\n                                        )}\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>                    \r\n                </Col>\r\n               \r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>ORDER SUMMARY</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                               {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <PreLoader />}\r\n\r\n                                            {sdkReady ? (\r\n                                                <PreLoader />\r\n                                            ) : (\r\n                                                    <PayPalButton\r\n                                                        amount={order.totalPrice}\r\n                                                        onSuccess={handlePaymentSuccess}\r\n                                                    />\r\n                                                )}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default OrderScreen;","import React, { useEffect } from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport Message from '../components/Message.js'\r\nimport PreLoader from '../components/Loader.js';\r\nimport { listUsersAction } from '../actions/userActions.js';\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { Link } from '@mui/material';\r\n\r\nfunction UsersListScreen({history}){\r\n\r\n    const usersList = useSelector(state=>state.usersList)\r\n    const {loading, users, error} = usersList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    function deleteHandler(id){\r\n        if(window.confirm(\"Delete user?\")){\r\n               //e.preventDefault();\r\n        console.log('delete item', id)\r\n        }else{\r\n            //history.push('users/')\r\n        }\r\n     \r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsersAction())\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n        \r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n    return (\r\n\r\n            <React.Fragment>\r\n                    {\r\n                        loading ? (<PreLoader />)\r\n                        ? error : (<Message text = {error} />)\r\n                        : (\r\n                            <div>\r\n                                <h2>Subscribers</h2>\r\n                            <Table striped hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {\r\n                                        users.map((user) =>\r\n                                    <tr key={user.id}>\r\n                                        <td>{user.id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                        ) : (\r\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n\r\n                                         <td>\r\n                                            <Link to={`/user/${user.id}/edit`}>\r\n                                                <Button variant='light' className='btn-sm'>\r\n                                                    <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </Link>\r\n\r\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user.name)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n\r\n                                    </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                            </div>\r\n                        )\r\n                    }\r\n            </React.Fragment>\r\n    )\r\n};\r\nexport default UsersListScreen;","import HomeScreen from './screens/HomeScreen';\nimport {BrowserRouter, HashRouter, Route} from 'react-router-dom';\nimport ProductScreen from './screens/ProducScreen';\nimport CartScreen from './screens/CartScreen';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport {Container} from 'react-bootstrap';\nimport './index.css';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceorderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UsersListScreen from './screens/UsersListScreen';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n      <Header />\n      <main>\n      <Container>\n      <Route exact path = \"/\" component = {HomeScreen}/>\n      <Route exact path = \"/details/:id/\" component = {ProductScreen}/>\n      <Route exact path = \"/cart/:id?/\" component = {CartScreen}/>\n      <Route exact path = \"/login/\" component = {LoginScreen}/>\n      <Route exact path = \"/register/\" component = {RegisterScreen}/>\n      <Route exact path = \"/profile/\" component = {ProfileScreen}/>\n      <Route exact path = '/shipping/' component = {ShippingScreen}/>\n      <Route exact path = '/payment/' component = {PaymentScreen} />\n      <Route exact path = \"/placeorder/\" component={PlaceOrderScreen} />\n      <Route exact path = \"/order/:id/\" component={OrderScreen} />\n      <Route exact path = \"/users/\" component={UsersListScreen} />\n      </Container>\n      </main>\n      <Footer />\n      </HashRouter>\n    \n    </div>   \n  );\n}\n\nexport default App;\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { OrderCreateReducer, orderDetailsReducer, orderPayReducer, userOrderReducer } from './reducers/OrderReducer';\r\nimport {productGetTopReducer, ProductListReducer, ProductReviewReducer} from './reducers/productsReducer';\r\nimport {ProductDetailsReducer} from './reducers/productsReducer';\r\nimport {userDetailsReducer, userLoginReducer, userProfileUpdateReducer, userRegisterReducer, usersListReducer} from './reducers/userReducers';\r\n\r\nconst middleware = [thunk]\r\nconst reducers = combineReducers(\r\n    {productList: ProductListReducer,\r\n    productDetails : ProductDetailsReducer,\r\n    cart : cartReducer,\r\n    userLogin : userLoginReducer,\r\n    userRegister : userRegisterReducer,\r\n    userDetails : userDetailsReducer,\r\n    userDetailsUpdate: userProfileUpdateReducer,\r\n    orderCreate : OrderCreateReducer,\r\n    orderDetails : orderDetailsReducer,\r\n    orderPay : orderPayReducer,\r\n    userOrders : userOrderReducer,\r\n    usersList : usersListReducer,\r\n    productReviews : ProductReviewReducer,\r\n    productGetTop : productGetTopReducer\r\n    }\r\n)\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst shippingInfoFromStorage = localStorage.getItem('shippingAddress') ?\r\nJSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst paymentMethodFromStorage = localStorage.getItem(\"paymentMethod\") ? \r\nJSON.parse(localStorage.getItem(\"paymentMethod\")) : \"\"\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\nJSON.parse(localStorage.getItem(\"userInfo\")) : null\r\n\r\n\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems : cartItemsFromStorage, \r\n        shippingInfo : shippingInfoFromStorage,\r\n        paymentMethod : paymentMethodFromStorage,\r\n    },\r\n    userLogin : {\r\n        userInfo : userInfoFromStorage,\r\n    },\r\n}\r\n\r\n\r\nconst store = createStore(reducers, initialState, \r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store;","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_REVIEW_CREATE_REQUEST,\r\n    PRODUCT_REVIEW_CREATE_SUCCESS,\r\n    PRODUCT_REVIEW_CREATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n \r\n\r\n\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const ProductListReducer = (state = {products: []}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_LIST_REQUEST:\r\n            return {loading : true, products : []}\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading:false, \r\n                products:action.payload.products,\r\n                page:action.payload.page,\r\n                pages:action.payload.pages\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return {loading:false, error:action.payload.products}\r\n        default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport const ProductDetailsReducer = (state = {product : {reviews : []}}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {\r\n                loading: true, ...state\r\n            }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false, product : action.payload\r\n            }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {\r\n                loading: false, \r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n }\r\n\r\n export const ProductReviewReducer = (state = {}, action) => {\r\n     switch(action.type){\r\n         case PRODUCT_REVIEW_CREATE_REQUEST:\r\n             return {\r\n                 loading : false\r\n             }\r\n\r\n        case PRODUCT_REVIEW_CREATE_SUCCESS:\r\n            return {\r\n                loading : false,\r\n                reviews : action.payload,\r\n                success : true\r\n            }\r\n\r\n        case PRODUCT_REVIEW_CREATE_FAIL:\r\n            return {\r\n                loading : false,\r\n                error : action.payload\r\n            }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n     }\r\n }\r\n\r\n\r\n export const productGetTopReducer = (state={products:[]}, action) => {\r\n     switch(action.type){\r\n         case PRODUCT_TOP_REQUEST:\r\n             return {\r\n                 loading : true,\r\n                 ...state\r\n             }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return {\r\n                loading : false,\r\n                products : action.payload\r\n            }\r\n        case PRODUCT_TOP_FAIL:\r\n            return {\r\n                loading : false\r\n            }\r\n        default:\r\n            return state\r\n     }\r\n }","import {CART_ADD_ITEM, CART_REMOVE_ITEM, ADD_SHIPPING_INFO, ADD_PAYMENT_METHOD_INFO, CART_ITEMS_CLEAR} from '../constants/cartConstants'\r\n\r\n\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingInfo : {}}, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n            case CART_REMOVE_ITEM:\r\n                return{\r\n                    ...state,\r\n                    cartItems : state.cartItems.filter((item) => item.product !== action.payload)\r\n                }\r\n\r\n            case ADD_SHIPPING_INFO:\r\n                return {\r\n                    ...state, shippingInfo : action.payload\r\n                }\r\n            case ADD_PAYMENT_METHOD_INFO:\r\n                return {\r\n                    ...state, paymentMethod : action.payload\r\n                }\r\n            case CART_ITEMS_CLEAR:\r\n                return{}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, \r\nUSER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL,\r\nUSER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL,\r\nUSER_DETAILS_UPDATE_REQUEST, USER_DETAILS_UPDATE_SUCCESS, USER_DETAILS_UPDATE_FAIL, \r\nUSER_DETAILS_UPDATE_RESET,\r\n\r\nUSER_LIST_REQUEST,\r\nUSER_LIST_SUCCESS,\r\nUSER_LIST_FAIL} from \"../constants/userConstants\";\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case USER_LOGIN_REQUEST:\r\n            return {loading:true}\r\n        case USER_LOGIN_SUCCESS:\r\n            return {loading:false, userInfo:action.payload}\r\n        case USER_LOGIN_FAIL:\r\n            return {loading:false, error:action.payload}\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case USER_REGISTER_REQUEST:\r\n            return {\r\n                loading:true\r\n            }\r\n        case USER_REGISTER_SUCCESS:\r\n            return{\r\n                loading:false,\r\n                userInfo : action.payload, \r\n            }\r\n        case USER_REGISTER_FAIL:\r\n            return{\r\n                loading:false,\r\n                error : action.payload\r\n            }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userProfileUpdateReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case USER_DETAILS_UPDATE_REQUEST:\r\n            return { loading : true }\r\n\r\n        case USER_DETAILS_UPDATE_SUCCESS:\r\n            return { loading : false, userInfo : action.payload, success:true}\r\n\r\n        case USER_DETAILS_UPDATE_FAIL:\r\n            return {loading : false, error : action.payload}\r\n\r\n        case USER_DETAILS_UPDATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const usersListReducer = (state = {users : []}, action) => {\r\n    switch(action.type){\r\n        case USER_LIST_REQUEST:\r\n            return {\r\n                loading : true\r\n            }\r\n        \r\n        case USER_LIST_SUCCESS:\r\n            return {\r\n                loading : false,\r\n                users : action.payload\r\n            }\r\n\r\n        case USER_LIST_FAIL:\r\n            return {\r\n                loading : false,\r\n                error : action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n\r\n    USER_ORDER_FAIL,\r\n    USER_ORDER_REQUEST,\r\n    USER_ORDER_SUCCESS,\r\n} from '../constants/OrderConstants'\r\n\r\n\r\nexport const OrderCreateReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch(action.type){\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading : true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading : false,\r\n                success : true,\r\n                order : action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading : false,\r\n                error : action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = {loading : true, shippingAddress : {}, orderItems : []}, action) => {\r\n    switch(action.type){\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading : true\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading : false,\r\n                order : action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading : false,\r\n                error : action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch(action){\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading : true\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading : false,\r\n                success : false,\r\n                paymentResult : action.payload\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading : false,\r\n                error : action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userOrderReducer = (state={}, action) => {\r\n    switch(action.type){\r\n        case USER_ORDER_REQUEST:\r\n            return {\r\n                loading : true\r\n            }\r\n        case USER_ORDER_SUCCESS:\r\n            return {\r\n                loading : false,\r\n                orders : action.payload\r\n            }\r\n        case USER_ORDER_FAIL:\r\n            return {\r\n                loading : false,\r\n                error : action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './store';\n\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}